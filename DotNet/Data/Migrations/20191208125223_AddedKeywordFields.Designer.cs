// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191208125223_AddedKeywordFields")]
    partial class AddedKeywordFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Keyword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<bool>("Positive");

                    b.Property<Guid>("RecordId");

                    b.Property<double>("Significance");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Anamneza");

                    b.Property<string>("AparatCardiovascular");

                    b.Property<string>("AparatDigestiv");

                    b.Property<string>("AparatRespirator");

                    b.Property<string>("AparatUroGeneral");

                    b.Property<string>("Constienta");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Diagnosis");

                    b.Property<string>("Facies");

                    b.Property<string>("Fanere");

                    b.Property<string>("FicatSplina");

                    b.Property<int>("Greutate");

                    b.Property<string>("IstoriculBolii");

                    b.Property<string>("MotiveleInternarii");

                    b.Property<string>("Mucoase");

                    b.Property<string>("Nutritie");

                    b.Property<string>("SistemEndocrin");

                    b.Property<string>("SistemGanglionar");

                    b.Property<string>("SistemMuscular");

                    b.Property<string>("SistemOsteoArticular");

                    b.Property<string>("StareaGenerala");

                    b.Property<int>("Talie");

                    b.Property<string>("Tegumente");

                    b.Property<string>("TesutConjunctiv");

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Core.Entities.Keyword", b =>
                {
                    b.HasOne("Core.Entities.Record", "Record")
                        .WithMany("Keywords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
